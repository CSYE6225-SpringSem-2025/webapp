name: Build and Share Custom Images

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  build-and-share:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Configure AWS Credentials for Dev Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "1.9.4"

      - name: Initialize Packer
        run: |
          cd packer
          packer init .

      - name: Build Images in Dev Account
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/gcp-key.json
          cd packer
          packer build .
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

      - name: Get Latest AMI ID
        id: get-ami
        run: |
          AMI_ID=$(aws ec2 describe-images \
            --owners self \
            --query 'sort_by(Images, &CreationDate)[-1].ImageId' \
            --output text)
          echo "AMI ID: $AMI_ID"
          echo "ami_id=$AMI_ID" >> $GITHUB_OUTPUT

      - name: Wait for AMI to be available
        run: |
          echo "Waiting for AMI to become available..."
          aws ec2 wait image-available --image-ids ${{ steps.get-ami.outputs.ami_id }}
          echo "AMI is now available."

      - name: Share AMI with Demo Account
        run: |
          DEV_ACCOUNT_ID=${{ secrets.DEV_AWS_ACCOUNT_ID }}
          DEMO_ACCOUNT_ID=${{ secrets.DEMO_AWS_ACCOUNT_ID }}
          AMI_ID="${{ steps.get-ami.outputs.ami_id }}"

          echo "Sharing AMI $AMI_ID with account $DEMO_ACCOUNT_ID"

          # Retry logic for sharing the AMI
          for i in {1..5}; do
            aws ec2 modify-image-attribute \
              --image-id $AMI_ID \
              --launch-permission "Add=[{UserId=$DEMO_ACCOUNT_ID}]" && break
            echo "Retrying to share the AMI ($i/5)..."
            sleep $((i * 5))
          done

      - name: Configure AWS Credentials for Demo Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Copy Shared AMI in Demo Account
        run: |
          AMI_ID="${{ steps.get-ami.outputs.ami_id }}"
          echo "Copying the shared AMI..."
          COPIED_AMI_ID=$(aws ec2 copy-image \
            --source-image-id $AMI_ID \
            --source-region us-east-1 \
            --region us-east-1 \
            --name "Copied-WebApp-AMI-$(date +%Y%m%d-%H%M%S)" \
            --query 'ImageId' \
            --output text)

          echo "Copied AMI ID: $COPIED_AMI_ID"

          aws ec2 create-tags \
            --resources $COPIED_AMI_ID \
            --tags Key=Name,Value="Copied-WebApp-AMI"